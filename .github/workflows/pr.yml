name: PR Build & Tests
on:
  pull_request:

jobs:
  build-test-app:
    runs-on: ubuntu-latest
    outputs:
      store-path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
          submodules: true

      - name: Install Node.js
        uses: actions/setup-node@v6
        with:
          node-version: 22.21.1

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.15.9
          run_install: false

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: node_modules
          key: "${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}"
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install Dependencies
        run: pnpm install

      - name: Run linter check
        run: pnpm lint

      - name: Check if app builds properly
        run: pnpm build

      - name: Run tests with coverage
        run: pnpm test:ci

      - name: SonarCloud Scan
        uses: SonarSource/sonarqube-scan-action@v6.0.0
        env:
          SONAR_TOKEN: ${{ secrets.SONARCLOUD_TOKEN }}
  build-docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 2
          submodules: true

      - uses: actions/cache@v4
        name: Pull pnpm cache
        with:
          path: node_modules
          key: "${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}"
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: latest

      - name: Check if app builds properly via docker
        uses: docker/build-push-action@v6
        with:
          file: Dockerfile
          platforms: linux/amd64
          context: .
          push: false
          build-args: |
            VERSION=${{ inputs.version }}
